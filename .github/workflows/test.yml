name: Test

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Install server dependencies
      run: |
        cd server
        npm ci --prefer-offline --no-audit

    - name: Install client dependencies
      run: |
        cd client
        npm ci --prefer-offline --no-audit

    - name: Run server tests
      run: |
        cd server
        npm test --if-present

    - name: Run client tests
      run: |
        cd client
        npm test --if-present --watchAll=false

    - name: Build client
      run: |
        cd client
        npm run build

    - name: Lint server code
      run: |
        cd server
        npm run lint --if-present

    - name: Lint client code
      run: |
        cd client
        npm run lint --if-present

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run npm audit
      run: |
        cd server && npm audit --audit-level moderate
        cd ../client && npm audit --audit-level moderate

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
